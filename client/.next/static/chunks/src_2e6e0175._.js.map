{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Desktop/pet%20projects/FoodieHub/client/src/utils/stripe.js"],"sourcesContent":["// utils/stripe.js\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nlet stripePromise;\r\nconst getStripe = () => {\r\n    if (!stripePromise) {\r\n        stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY);\r\n    }\r\n    return stripePromise;\r\n};\r\n\r\nexport default getStripe;"],"names":[],"mappings":"AAAA,kBAAkB;;;;AAMiB;AALnC;AAAA;;AAEA,IAAI;AACJ,MAAM,YAAY;IACd,IAAI,CAAC,eAAe;QAChB,gBAAgB,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD;IAC7B;IACA,OAAO;AACX;uCAEe","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Desktop/pet%20projects/FoodieHub/client/src/utils/payment.ts"],"sourcesContent":["export const convertToSubcurrency = (num: number) => {\r\n    return Math.round(parseFloat(num.toFixed(2)) * 100);\r\n}"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB,CAAC;IACjC,OAAO,KAAK,KAAK,CAAC,WAAW,IAAI,OAAO,CAAC,MAAM;AACnD","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Desktop/pet%20projects/FoodieHub/client/src/components/order/PaymentCard.tsx"],"sourcesContent":["\"use client\"\r\nimport {\r\n    PaymentElement,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { User } from \"lucide-react\";\r\nimport { FormEvent, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { convertToSubcurrency } from \"@/utils/payment\";\r\n\r\nexport default function PaymentCard({ clientSecret }: { clientSecret: string}) {\r\n\r\n    return (\r\n        <>\r\n            {(!clientSecret ) ? (<div className=\"animate-spin rounded-full h-12 w-12 border-t-4 border-blue-500 border-solid mx-auto\"></div>) : (\r\n                <div className=\"shadow-xs border-borderColor border-[1px] flex flex-col gap-4 rounded-xl py-7 px-6 \">\r\n                    <div className=\" flex flex-col gap-3\">\r\n                        <h2 className=\"text-2xl leading-8 font-bold text-secondary\">Your Details</h2>\r\n                        <p className=\"text-gray text-base! leading-7 \"></p>\r\n                    </div>\r\n                    <form className=\"flex flex-col gap-6\" >\r\n                        \r\n                        {clientSecret && <PaymentElement className=\"\" />}\r\n                    </form>\r\n                </div>\r\n\r\n            )}\r\n\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AASe,SAAS,YAAY,EAAE,YAAY,EAA2B;IAEzE,qBACI;kBACK,AAAC,CAAC,6BAAkB,6LAAC;YAAI,WAAU;;;;;iCAChC,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAG,WAAU;sCAA8C;;;;;;sCAC5D,6LAAC;4BAAE,WAAU;;;;;;;;;;;;8BAEjB,6LAAC;oBAAK,WAAU;8BAEX,8BAAgB,6LAAC,sLAAA,CAAA,iBAAc;wBAAC,WAAU;;;;;;;;;;;;;;;;;;AAQnE;KApBwB","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Desktop/pet%20projects/FoodieHub/client/src/components/order/CheckoutForm.tsx"],"sourcesContent":["\"use client\"\r\nimport getStripe from \"@/utils/stripe\";\r\nimport PaymentCard from \"@/components/order/PaymentCard\";\r\nimport { useAppSelector } from \"@/hooks/reduxHooks\"\r\nimport { Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport axios, { isAxiosError } from \"axios\";\r\nimport { Lock, Send } from \"lucide-react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport { FormEvent, useEffect, useState } from \"react\";\r\nimport { convertToSubcurrency } from \"@/utils/payment\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getEventListeners } from \"events\";\r\nimport { Order } from \"@/redux/reduxTypes\";\r\n\r\nenum Shipping {\r\n    Economy = 2.20,\r\n    Standart = 3.20,\r\n    Express = 5.20,\r\n}\r\n\r\ntype FormFields = {\r\n    name: string,\r\n    surname: string,\r\n    city: string,\r\n    countryOrRegion: string,\r\n    street: string,\r\n    houseNumber: number,\r\n    apartmentNumbr: number,\r\n}\r\nconst CheckoutForm = ({ order }: { order: Order }) => {\r\n    const { register, trigger, getValues, formState: { errors } } = useForm<FormFields>()\r\n    const { user } = useAppSelector(state => state.auth);\r\n    const [clientSecret, setClientSecret] = useState<string>(\"\");\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [shipping, setShipping] = useState<Shipping>(Shipping.Economy);\r\n    const { cart } = useAppSelector(state => state.cart)\r\n    const [promocode, setPromocode] = useState<string>(\"\");\r\n    const [discount, setDiscount] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const usePromocode = async () => {\r\n        try {\r\n            const res = await axios.post(\"http://localhost:5200/api/promocode/use\", { PromoC: promocode }, { withCredentials: true });\r\n            if (res.data) {\r\n                setDiscount(res.data.discount + discount);\r\n                setPromocode(\"\");\r\n\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n            if (axios.isAxiosError(err) && err.response)\r\n                setError(err.response.data);\r\n        }\r\n    }\r\n    const getClientSecret = async () => {\r\n        try {\r\n\r\n            if (order) {\r\n\r\n                const res = await axios.post(\"http://localhost:5200/api/payment/payment-intent\", { amount: convertToSubcurrency((shipping + order.totalPrice) * ((100 - discount) / 100)) });\r\n                setClientSecret(res.data.clientSecret);\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n\r\n        getClientSecret();\r\n        console.log(cart);\r\n\r\n    }, [discount, shipping]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getClientSecret();\r\n        if (user?.usualPromocode?.discountPercent)\r\n            setDiscount(user.usualPromocode.discountPercent)\r\n    }, [user])\r\n    const placeOrder = async () => {\r\n        setLoading(true);\r\n\r\n        const formData = getValues();\r\n        console.log(formData, \"yes\");\r\n        if (!stripe || !elements) return;\r\n        const { error: submitError } = await elements.submit();\r\n        if (submitError && submitError.message) {\r\n            setError(submitError.message);\r\n            setLoading(false);\r\n        }\r\n        if (order) {\r\n            const res = await axios.patch(\"http://localhost:5200/api/order/update-order\", { formData, percent: discount, shipping, cartId: cart?._id, totalPrice: parseFloat(((shipping + order.totalPrice) * ((100 - discount) / 100)).toFixed(2)) }, { withCredentials: true });\r\n            const { error } = await stripe.confirmPayment({\r\n                elements,\r\n                clientSecret,\r\n                confirmParams: {\r\n                    return_url: `http://localhost:3000/orders/order/sucess/${((shipping + order.totalPrice) * ((100 - discount) / 100)).toFixed(2)}`,\r\n                }\r\n            })\r\n            setLoading(false);\r\n            if (error.message && error) {\r\n                setError(error.message);\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <section className='flex gap-8 mt-10 items-start mb-12'>\r\n            <div className=\"basis-[886px] grow-0 flex flex-col gap-8\">\r\n                <div className=\"shadow-xs border-borderColor border-[1px] rounded-xl py-7 px-6 flex flex-col gap-3\">\r\n                    <h2 className=\"text-2xl leading-8 font-bold text-secondary\">Your Details</h2>\r\n                    <p className=\"text-gray text-base! leading-7 \">{user?.email ? user.email : user?.username}</p>\r\n                </div>\r\n                <div className=\"shadow-xs border-borderColor border-[1px] rounded-xl py-7 px-6 text-sm leading-[22px] text-secondary  flex flex-col \">\r\n                    <div className=\"\">\r\n                        <h2 className=\"text-2xl leading-8 font-bold \">Delivery Information</h2>\r\n                        <div className=\"grid grid-cols-2  gap-4\">\r\n                            <div className=\"flex flex-col w-[50%] col-span-2 gap-1\">\r\n                                <label className=\"text-gray text-base! leading-7 \">Country/Region</label>\r\n                                <select {...register(\"countryOrRegion\", { required: true })} className=\"input py-2 px-3 \">\r\n                                    <option value=\"Ukraine\">Ukraine</option>\r\n                                    <option value=\"Poland\">Poland</option>\r\n                                    <option value=\"Germany\">Germany</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"flex flex-col gap-1\">\r\n                                <label className=\"text-gray text-base! leading-7 \">Name</label>\r\n\r\n                                <input type=\"text\" {...register(\"name\", {\r\n                                    required: \"Required!\", pattern: {\r\n                                        value: /^[A-Za-z]+$/,\r\n                                        message: \"Only letters\"\r\n                                    }\r\n                                })} className=\"input py-2 px-3 \" />\r\n                                <div className=\"text-red-500\">{errors.name?.message}</div>\r\n                            </div>\r\n                            <div className=\"flex flex-col gap-1\">\r\n                                <label className=\"text-gray text-base! leading-7 \">Surname</label>\r\n\r\n                                <input type=\"text\" {...register(\"surname\", {\r\n                                    required: \"Required!\", pattern: {\r\n                                        value: /^[A-Za-z]+$/,\r\n                                        message: \"Only letters\"\r\n                                    }\r\n                                })} className=\"input py-2 px-3 \" />\r\n                                <div className=\"text-red-500\">{errors.name?.message}</div>\r\n\r\n                            </div>\r\n                            <div className=\"flex flex-col gap-1\">\r\n                                <label className=\"text-gray text-base! leading-7 \">City </label>\r\n\r\n                                <input type=\"text\" {...register(\"city\", {\r\n                                    required: \"Required!\", pattern: {\r\n                                        value: /^[A-Za-z]+$/,\r\n                                        message: \"Only letters\"\r\n                                    }\r\n                                })} className=\"input py-2 px-3 \" />\r\n                                <div className=\"text-red-500\">{errors.name?.message}</div>\r\n\r\n                            </div>\r\n                            <div className=\"flex flex-col gap-1\">\r\n                                <label className=\"text-gray text-base! leading-7 \">Street</label>\r\n\r\n                                <input type=\"text\" {...register(\"street\", {\r\n                                    required: \"Required!\", pattern: {\r\n                                        value: /^[A-Za-z]+$/,\r\n                                        message: \"Only letters\"\r\n                                    }\r\n                                })} className=\"input py-2 px-3 \" />\r\n                                <div className=\"text-red-500\">{errors.name?.message}</div>\r\n\r\n                            </div>\r\n                            <div className=\"flex flex-col gap-1\">\r\n                                <label className=\"text-gray text-base! leading-7 \">House number</label>\r\n\r\n                                <input {...register(\"houseNumber\", { required: \"Required!\" })} className=\"input py-2 px-3 \" />\r\n                                <div className=\"text-red-500\">{errors.name?.message}</div>\r\n\r\n                            </div>\r\n                            <div className=\"flex flex-col gap-1\">\r\n                                <label className=\"text-gray text-base! leading-7 \">\r\n                                    Apartment number (optionally)</label>\r\n\r\n                                <input {...register(\"apartmentNumbr\", { required: true, })} className=\"input py-2 px-3 \" />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"shadow-xs border-borderColor border-[1px] rounded-xl py-7 px-6 flex flex-col \">\r\n                    <div className=\"\">\r\n                        <h2 className=\"text-2xl leading-8 font-bold text-secondary mb-3\">Shipping Method</h2>\r\n                        <div className=\"flex flex-col gap-6 w-full\">\r\n                            <div className=\"py-[15px] px-[17px] border-[1px] border-borderColor rounded-md flex items-center justify-between\">\r\n                                <div className=\"flex items-center gap-3\">\r\n                                    <input checked={shipping === Shipping.Economy} onChange={() => setShipping(Shipping.Economy)} type=\"radio\" className=\"accent-primary cursor-pointer\" />\r\n                                    <div className=\"leading-[14px] flex flex-col gap-1 text-sm font-medium\">\r\n                                        <span className=\"text-secondary\">Economy Shipping</span>\r\n                                        <span className=\"text-gray\">~50+ minutes</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <span className=\"text-sm leading-[14px] text-secondary font-semibold\">${Shipping.Economy}</span>\r\n                            </div>\r\n                            <div className=\"py-[15px] px-[17px] border-[1px] border-borderColor rounded-md flex items-center justify-between\">\r\n                                <div className=\"flex items-center gap-3\">\r\n                                    <input checked={shipping === Shipping.Standart} onChange={() => setShipping(Shipping.Standart)} type=\"radio\" className=\"accent-primary cursor-pointer\" />\r\n                                    <div className=\"leading-[14px] flex flex-col gap-1 text-sm font-medium\">\r\n                                        <span className=\"text-secondary\">Standart Shipping</span>\r\n                                        <span className=\"text-gray\">~30-50 minutes</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <span className=\"text-sm leading-[14px] text-secondary font-semibold\">${Shipping.Standart}</span>\r\n                            </div>\r\n                            <div className=\"py-[15px] px-[17px] border-[1px] border-borderColor rounded-md flex items-center justify-between\">\r\n                                <div className=\"flex items-center gap-3\">\r\n                                    <input checked={shipping === Shipping.Express} onChange={() => setShipping(Shipping.Express)} type=\"radio\" className=\"accent-primary cursor-pointer\" />\r\n                                    <div className=\"leading-[14px] flex flex-col gap-1 text-sm font-medium\">\r\n                                        <span className=\"text-secondary\">Express Shipping</span>\r\n                                        <span className=\"text-gray\">~15-30 minutes</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <span className=\"text-sm leading-[14px] text-secondary font-semibold\">${Shipping.Express}</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {order && (<PaymentCard clientSecret={clientSecret} />)}\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <div className=\" shadow-xs  border-borderColor border-[1px] rounded-xl  py-[52px] pr-[42px] pl-[57px]\">\r\n                <h2 className=\"text-2xl leading-8 font-bold text-secondary mb-[21px]\">Order Summary</h2>\r\n                <div className=\"flex flex-col gap-8 pb-6 border-b-[1px] mb-6 border-borderColor\">\r\n                    {order?.items.map((item, idx) => {\r\n                        return (\r\n                            <div key={idx} className=\"flex items-center w-full justify-between  h-16\">\r\n                                <div className=\"flex gap-4 items-center \">\r\n                                    <img className=\"size-16 object-cover rounded-lg border-[1px] border-borderColor\" src={item.imageUrl} alt=\"\" />\r\n                                    <div className=\"\">\r\n                                        <h3 className=\"font-medium text-secondary\">{item.title}</h3>\r\n                                        <p className=\"text-sm leading-5  text-gray\">Quantity: {item.amount}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"font-semibold text-secondary\">${item.price}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n                <div className=\"flex flex-col gap-2\">\r\n                    <div className=\"flex items-center justify-between text-sm leading-5 \">\r\n                        <span className=\"text-gray\">Subtotal</span>\r\n                        <span className=\"text-black\">${order?.totalPrice.toFixed(2)}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between text-sm leading-5 \">\r\n                        <span className=\"text-gray\">Shipping</span>\r\n                        <span className=\"text-black\">${shipping.toFixed(2)}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between text-sm leading-5 \">\r\n                        <span className=\"text-gray\">Discount</span>\r\n                        <span className={`text-black ${discount > 0 ? \"text-green-600\" : \"\"}`}>{discount}%</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-[18px] mb-[30px] text-lg leading-7 font-bold flex items-center justify-between\">\r\n                    <span>Total</span>\r\n                    <span>${((shipping + order.totalPrice) * ((100 - discount) / 100)).toFixed(2)}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 relative overflow-hidden pr-14\">\r\n                    <label>Promocode: </label>\r\n\r\n                    <input value={promocode} onChange={(e) => setPromocode(e.target.value)} className=\"input px-2 py-1 \" type=\"text\" />\r\n                    <button onClick={async () => await usePromocode()} className=\"btn absolute right-0 px-2 py-1\"><Send /></button>\r\n                </div>\r\n                <div className=\"w-full items-center flex flex-col gap-4\">\r\n                    <button onClick={placeOrder} type=\"submit\" className=\"btn py-3   mt-6      px-2 max-w-[328px] w-full\">{loading ? (<span>Processing...</span>) : (<span>Place Order</span>)}</button>\r\n\r\n                    <p className=\"text-xs  leading-4 text-gray flex items-center justify-center gap-1\" ><Lock size={12} /> All transactions are secure and encrypted.</p>\r\n                    {error != null && (<span>{error}</span>)}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CheckoutForm"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1168, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Desktop/pet%20projects/FoodieHub/client/src/app/%28main%29/orders/order/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\"\r\nimport { redirect, useParams } from \"next/navigation\";\r\nimport { Order } from \"@/redux/reduxTypes\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport getStripe from \"@/utils/stripe\";\r\nimport { convertToSubcurrency } from \"@/utils/payment\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"@/components/order/CheckoutForm\";\r\n\r\nenum Shipping {\r\n    Economy = 2.20,\r\n    Standart = 3.20,\r\n    Express = 5.20,\r\n}\r\n\r\nconst Page = () => {\r\n    const [shipping, setShipping] = useState<Shipping>(Shipping.Economy);\r\n    const { id } = useParams() as { id: string };\r\n    const [order, setOrder] = useState<Order>();\r\n\r\n    const getOrder = async () => {\r\n        try {\r\n            const res = await axios.get(`http://localhost:5200/api/order/get-order/${id}`, { withCredentials: true });\r\n            if (res.data) {\r\n                setOrder(res.data);\r\n\r\n            } \r\n        } catch (err) {\r\n            redirect(\"/orders\");\r\n\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrder();\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {order && (\r\n                <Elements options={{\r\n                    mode: \"payment\",\r\n                    currency: \"usd\",\r\n                    amount: convertToSubcurrency(shipping + order.totalPrice)\r\n                }} stripe={getStripe()}>\r\n\r\n                    <CheckoutForm order={order} />\r\n                </Elements>)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Page"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAUA,IAAA,AAAK,kCAAA;;;;WAAA;EAAA;AAML,MAAM,OAAO;;IACT,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;IACvC,MAAM,EAAE,EAAE,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;IAEjC,MAAM,WAAW;QACb,IAAI;YACA,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,CAAC,0CAA0C,EAAE,IAAI,EAAE;gBAAE,iBAAiB;YAAK;YACvG,IAAI,IAAI,IAAI,EAAE;gBACV,SAAS,IAAI,IAAI;YAErB;QACJ,EAAE,OAAO,KAAK;YACV,CAAA,GAAA,qIAAA,CAAA,WAAQ,AAAD,EAAE;YAET,QAAQ,KAAK,CAAC;QAClB;IACJ;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACN;QAEJ;yBAAG,EAAE;IAIL,qBACI;kBAEK,uBACG,6LAAC,sLAAA,CAAA,WAAQ;YAAC,SAAS;gBACf,MAAM;gBACN,UAAU;gBACV,QAAQ,CAAA,GAAA,0HAAA,CAAA,uBAAoB,AAAD,EAAE,WAAW,MAAM,UAAU;YAC5D;YAAG,QAAQ,CAAA,GAAA,yHAAA,CAAA,UAAS,AAAD;sBAEf,cAAA,6LAAC,8IAAA,CAAA,UAAY;gBAAC,OAAO;;;;;;;;;;;;AAKzC;GAzCM;;QAEa,qIAAA,CAAA,YAAS;;;KAFtB;uCA2CS","debugId":null}}]
}